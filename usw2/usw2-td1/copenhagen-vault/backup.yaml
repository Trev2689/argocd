apiVersion: batch/v1
kind: CronJob
metadata:
  creationTimestamp: "2024-04-30T09:19:21Z"
  generation: 1
  name: vault-backup
  namespace: copenhagen-vault
  resourceVersion: "3890338"
  uid: e06d9180-c5e7-43ef-8dfb-fd204742702b
spec:
  concurrencyPolicy: Allow
  failedJobsHistoryLimit: 2
  jobTemplate:
    metadata:
      creationTimestamp: null
    spec:
      backoffLimit: 3
      completions: 1
      manualSelector: false
      parallelism: 1
      template:
        metadata:
          creationTimestamp: null
        spec:
          automountServiceAccountToken: true
          containers:
          - args:
            - |
              cd /$VAULT_NAMESPACE
              echo "Waiting for snapshot..."
              retries=0
              while [ ! -f /$VAULT_NAMESPACE/snapshot_ready ]; do
                  sleep 1
                  retries=$((retries+1))
                  if [ $retries -ge 180 ]; then  # Give up after 3 minutes (180 seconds)
                      echo "Failed to find snapshot after multiple attempts."
                      exit 1
                  fi
              done
              UNIQUE_NAME=$(find /$VAULT_NAMESPACE -maxdepth 1 -type f -name "$VAULT_NAMESPACE*" | head -n 1)
              echo "Starting Vault backup..."
              # Run aws command to upload backup
              aws s3 cp $UNIQUE_NAME s3://$S3_DESTINATION
              # Check if upload was successful
              if [ $? -eq 0 ]; then
                  echo "Backup uploaded successfully."
                  # Remove the snapshot file after successful upload
                  rm -f $UNIQUE_NAME && echo "Snapshot file removed successfully."
                  # Remove the sentinel file
                  rm -f /$VAULT_NAMESPACE/snapshot_ready && echo "Snapshot ready indicator removed."
              else
                  echo "Failed to upload backup to S3."
                  exit 1
              fi
            command:
            - /bin/sh
            - -c
            env:
            - name: VAULT_ADDR
              value: https://copenhagen-vault-active.copenhagen-vault.svc.cluster.local:8200
            - name: VAULT_CAPATH
              value: /vault/tls/ca.crt
            - name: BACKUP_ROLE
              value: vault_backup
            - name: VAULT_NAMESPACE
              value: copenhagen-vault
            - name: S3_DESTINATION
              value: wd-997925851768-anubis-bkp-usw2/anubis-t3-usw2-td1-eks/copenhagen/
            image: amazon/aws-cli:latest
            imagePullPolicy: Always
            name: backup-exporter
            resources:
              limits:
                cpu: "2"
                memory: 8Gi
              requests:
                cpu: 500m
                memory: 1Gi
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /vault/tls
              mountPropagation: None
              name: tls
              readOnly: true
            - mountPath: /copenhagen-vault
              mountPropagation: None
              name: copenhagen-vault
          dnsPolicy: ClusterFirst
          enableServiceLinks: true
          initContainers:
          - args:
            - |
              cd /$VAULT_NAMESPACE
              DATE=$(date +"%Y%m%d%H%M%S")
              UNIQUE_NAME="$VAULT_NAMESPACE-$DATE-$(cat /proc/sys/kernel/random/uuid).snap"
              echo "Starting Vault backup..."
              if vault login -method=aws -path=backup header_value=$VAULT_NAMESPACE-backup-cronjob role=$BACKUP_ROLE; then
                  echo "Logged in successfully."
              else
                  echo "Failed to log in to Vault."
                  exit 1
              fi
              echo "Saving snapshot..."
              if vault operator raft snapshot save $UNIQUE_NAME; then
                  echo "Snapshot saved successfully."
                  touch /$VAULT_NAMESPACE/snapshot_ready  # Create snapshot ready file we check in aws cli container
              else
                  echo "Failed to save snapshot."
                  exit 1
              fi
            command:
            - /bin/sh
            - -c
            env:
            - name: VAULT_ADDR
              value: https://copenhagen-vault-active.copenhagen-vault.svc.cluster.local:8200
            - name: VAULT_CAPATH
              value: /vault/tls/ca.crt
            - name: BACKUP_ROLE
              value: vault_backup
            - name: VAULT_NAMESPACE
              value: copenhagen-vault
            image: hashicorp/vault:1.15.2
            imagePullPolicy: IfNotPresent
            name: vault-snapshot-init
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /vault/tls
              mountPropagation: None
              name: tls
              readOnly: true
            - mountPath: /copenhagen-vault
              mountPropagation: None
              name: copenhagen-vault
          restartPolicy: Never
          schedulerName: default-scheduler
          securityContext: {}
          serviceAccount: copenhagen-bkp
          serviceAccountName: copenhagen-bkp
          shareProcessNamespace: false
          terminationGracePeriodSeconds: 30
          volumes:
          - name: tls
            secret:
              defaultMode: 420
              optional: false
              secretName: copenhagen-vault-tls
          - emptyDir: {}
            name: copenhagen-vault
  schedule: '*/15 * * * *'
  successfulJobsHistoryLimit: 1
  suspend: false
